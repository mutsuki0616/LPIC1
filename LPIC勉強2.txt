★パッケージ（Linux）
ソフトウェアの実行ファイル、設定ファイル、ライブラリ、マニュアルなどが含まれているファイル。
パッケージおよびその管理ツールを使用することで、ソフトウェアのインストール・アンインストールが容易にできる。

【Debian系】（Debian形式）
★dpkgツール
Debian系パッケージを管理する基本的なツール。
設定ファイルは「/etc/dpkg/dpkg.cfg」。

★dpkg [オプション] アクション
パッケージのインストール・アンインストール。（rpmと同等）
[アクション]
-r(--remove) p：設定ファイルを残してパッケージをアンインストール
-P(--purge) p：設定ファイルも含め完全にパッケージをアンインストール
-C(--audit) p：インストールが中断しているパッケージの表示

★dpkg-reconfigure p
インストール済のパッケージを再設定。

↓↓拡張↓↓
★APTツール

★apt-get [オプション] サブコマンド
インターネット・メディア上のパッケージ情報のデータベースを使い、
依存関係を調整しながらパッケージのインストール・アンインストールなどを行えるコマンド。

[サブコマンド]
remove p：パッケージのアンインストール
dist-upgrade：ディストリビューションを最新版にアップグレード

/etc/apt/sources.list
パッケージの取得元を設定するファイル

★apt-cache [サブコマンド]
パッケージ情報の検索・参照。
[サブコマンド]
search  k：キーワードを含むパッケージを検索
show p   ：指定したパッケージ情報の表示
showpkg p：指定したパッケージの被依存関係を含めた情報の表示
depends p：指定したパッケージが依存しているパッケージの一覧表示

★aptitude
上2つよりも高機能で、対話的なパッケージ管理が可能。

【RPM系】（Red Hat系）
★rpm
パッケージのインストール・アンインストールなどの基本的なパッケージ管理。
設定ファイルは「/usr/lib/rppm/rpmrc」。
[オプション]
<参照・検査関連>
-q(--query) p ：指定したパッケージがインストールされているか
-V(--verify) p：パッケージの検査

<インストール関連>
-i(--install) p：パッケージのインストール
-U(--upgrade) p：パッケージのアップグレード（なければインストール）
-F(--freshen) p：パッケージのアップグレード（なければインストールしない）
-e(--erase) p  ：パッケージのアンインストール

<併用オプション>
-v：詳細情報の表示
--changelog：指定したパッケージの変更履歴の表示
--nomd5：MD5によるファイルの改ざんを検査しない

★rpm2cpio
RPM系パッケージをcpio形式のアーカイブに変換。

↓↓拡張↓↓
★YUMツール
インターネット・メディア上のパッケージ情報のデータベースを使い、
依存関係を調整しながらパッケージ管理ができる。
設定ファイルは「/etc/yum.conf」
パッケージの取得元(リポジトリ)は「/etc/yum.repos.d」

★yum [サブコマンド]
パッケージのインストール・アンインストール。

[サブコマンド]
groupinstall g：パッケージグループのインストール
check-update p：アップデート可能なパッケージの表示
list p：パッケージの一覧表示（バージョン、インストール済かどうか）

★yumdownloader
パッケージファイルのダウンロードのみ。

******************************************************************************************************
★Linuxの主なディレクトリ
/home：一般ユーザのホームディレクトリ（書き込み頻繁）
/usr ：起動には不要なプログラム（読み込み頻繁）
/var ：ログファイルやメールなど可変ファイル群（書き込み頻繁）
/boot：Linuxカーネルなど起動に必須のファイル
/tmp ：一時ファイル
/bin ：一般ユーザ用のコマンド※
/sbin：管理者用のコマンド※
/etc ：システムの設定ファイル※
/lib ：共有ライブラリ※
/dev ：デバイスファイル※

※システムの起動に必要なディレクトリは、ルートパーティションから分割不可

★パーティション
ハードディスクを論理的に分割した個々の記憶領域。
Linuxには最低限①ルートパーティションと②スワップ領域が必要。
ディスク障害発生時の最小限の被害、障害発生時のスムーズな復旧作業という観点で、
一般的にはさらに多くのパーティションに分割。

①ルートパーティション
最上位のディレクトリであるルートディレクトリ(/)を割り当てたパーティション。
②スワップ領域
物理メモリに収まらなかった情報を一時的に格納するための領域。
物理メモリと同じサイズor2倍程度のサイズを設定。

ディレクトリの用途に応じて、特定のディレクトリを別のパーティションに割り当てる。
特に読み込み・書き込みが頻繁に発生するディレクトリに専用のパーティションを割り当てることが多い。


★共有ライブラリ
複数のプログラムが共通して利用するライブラリ。
一般的に「/lib」か「/usr/lib」に格納される。
「ldd コマンドのパス」：あるプログラム（コマンド）が必要としている共有ライブラリを表示。

↓検索方法↓
①「LD_LIBRARY_PATH」：検索パスを指定するための環境変数
②「/etc/ld.so.cache」：共有ライブラリを検索するためのバイナリファイル。
  「ldconfig」で「/etc/ld.so.conf」を参照した上で「/etc/ld.so.cache」更新。
③「/lib」と「/usr/lib」


★ライブラリ
汎用性の高いプログラムを再利用可能な形にしてまとめたもの。

******************************************************************************************************
★GLUB Legacy（GRUB1）
設定ファイル「/boot/grub/menu.lst」
ルートパーティションを指定するには、「root（hdディスク番号、パーティション番号）」

★GRUB2
ブートローダ。
設定ファイルは「/boot/grub/grub.cfg」。
設定の際は「/etc/default/grub」ファイルと「/etc/grub.d」ディレクトリ内のファイルに記述し、
「grub-mkconfig」コマンドで設定、反映。

★grub-install
GRUB Legacy or GRUB2をインストール

★起動
grub>kernel カーネルイメージ [オプション]

[オプション]
init=パス：initの代わりに指定コマンドを実行
root=デバイス名：ルートパーティションを設定
数字：指定したランレベルで起動
quiet：情報出力を抑制

☆systemdの場合
起動時のターゲットを指定するカーネルパラメータは「systemd.unit」

******************************************************************************************************
★論理ボリュームの作成手順
・物理ボリューム（PV）の作成
  物理的なハードディスクやパーティション。
・ボリュームグループ（VG）の作成
  物理ボリュームを集めて作る仮想的な領域（仮想的なハードディスクのようなもの）
・論理ボリューム（LV）の作成
  ボリュームグループの一部を使って作る仮想的なパーティション。
  論理ボリューム上にファイルシステムを作って利用可能。
  
★スナップショット
論理ボリュームへの変更前の情報を保持。